import React from "react";
import avatars from "./../../assets/avatars/index";
import { Button } from "@material-ui/core";


const CheckMark = () => (
  <svg width="8" height="8" version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" x="0px" y="0px"
  viewBox="0 0 488.878 488.878">
   <polygon points="143.294,340.058 50.837,247.602 0,298.439 122.009,420.447 122.149,420.306 
     144.423,442.58 488.878,98.123 437.055,46.298"/>
  </svg>
);

const Skull = () => (
  <svg fill="#d42a2a" width="16" height="16" viewBox="0 -81 512.00019 512" xmlns="http://www.w3.org/2000/svg"><path d="m193.160156 167.375c-21.035156 0-38.144531 17.105469-38.144531 38.140625 0 21.03125 17.109375 38.140625 38.144531 38.140625 21.03125 0 38.144532-17.109375 38.144532-38.140625 0-21.035156-17.113282-38.140625-38.144532-38.140625zm0 61.277344c-12.761718 0-23.144531-10.378906-23.144531-23.140625 0-12.757813 10.382813-23.140625 23.144531-23.140625 12.761719 0 23.144532 10.382812 23.144532 23.140625 0 12.761719-10.382813 23.140625-23.144532 23.140625zm0 0"/><path d="m318.839844 243.652344c21.03125 0 38.144531-17.105469 38.144531-38.140625 0-21.03125-17.113281-38.140625-38.144531-38.140625s-38.144532 17.109375-38.144532 38.140625c0 21.035156 17.113282 38.140625 38.144532 38.140625zm0-61.277344c12.761718 0 23.144531 10.378906 23.144531 23.140625 0 12.757813-10.382813 23.140625-23.144531 23.140625-12.761719 0-23.144532-10.382812-23.144532-23.140625 0-12.761719 10.382813-23.140625 23.144532-23.140625zm0 0"/><path d="m256 274.933594c13.878906 0 25.171875-11.292969 25.171875-25.171875 0-12.195313-9.554687-34.597657-25.171875-34.597657s-25.175781 22.398438-25.175781 34.597657c0 13.878906 11.292969 25.171875 25.175781 25.171875zm0-44.769532c3.191406 0 10.171875 11.183594 10.171875 19.597657 0 5.609375-4.5625 10.171875-10.171875 10.171875s-10.171875-4.5625-10.171875-10.171875c0-8.414063 6.980469-19.597657 10.171875-19.597657zm0 0"/><path d="m495.417969 239.632812c-13.25-8.800781-30.644531-8.273437-43.289063 1.316407-3.296875 2.503906-7.617187 2.882812-11.011718.96875l-41.542969-23.425781c11.667969-20.027344 17.839843-42.390626 17.839843-65.683594 0-10.109375-1.152343-20.015625-3.4375-29.675782l27.140626-15.304687c3.390624-1.914063 7.710937-1.535156 11.011718.96875 12.644532 9.589844 30.039063 10.117187 43.289063 1.316406 15.023437-9.976562 20.769531-29.894531 13.359375-46.324219-3.125-6.933593-8.175782-12.671874-14.601563-16.59375-3.546875-2.164062-5.675781-5.9375-5.695312-10.097656-.03125-7.523437-2.332031-14.8125-6.648438-21.074218-10.230469-14.839844-30.25-20.222657-46.5625-12.53125-14.386719 6.785156-22.929687 21.945312-21.265625 37.726562.4375 4.117188-1.472656 8.011719-4.863281 9.925781l-25.273437 14.253907c-8.894532-10.230469-19.332032-19.429688-30.96875-27.1875-3.445313-2.300782-8.101563-1.367188-10.402344 2.078124-2.296875 3.445313-1.367188 8.101563 2.078125 10.398438 36.757812 24.515625 57.835937 61.734375 57.835937 102.121094 0 34.832031-15.691406 67.429687-44.183594 91.785156-11.714843 10.019531-18.4375 24.46875-18.4375 39.640625v16.886719c0 6.683594-5.433593 12.21875-12.109374 12.34375-3.21875.085937-6.257813-1.191406-8.636719-3.53125-2.511719-2.464844-3.953125-5.867188-3.953125-9.332032 0-7.34375-4.320313-26.539062-27.292969-22.574218-5.429687.9375-19.449219 7.148437-19.449219 22.71875v12.101562c0 6.808594-5.539062 12.347656-12.347656 12.347656s-12.351562-5.539062-12.351562-12.347656v-12.101562c0-15.191406-12.164063-21.84375-19.496094-22.726563-22.429688-2.703125-27.246094 15.828125-27.246094 23.101563 0 6.691406-5.65625 12.347656-12.347656 12.347656-6.8125 0-12.351563-5.539062-12.351563-12.347656v-16.886719c0-15.171875-6.71875-29.621094-18.4375-39.640625-28.492187-24.355469-44.183593-56.949219-44.183593-91.785156 0-70.722656 65.679687-128.257813 146.410156-128.257813 21.535156 0 42.273437 4 61.640625 11.890625 3.839843 1.566406 8.214843-.277344 9.777343-4.113281s-.277343-8.214844-4.117187-9.777344c-21.171875-8.625-43.8125-13-67.296875-13-51.96875 0-98.273438 21.917969-127.816406 55.875l-25.324219-14.28125c-3.390625-1.914062-5.300781-5.808593-4.867187-9.921875 1.667968-15.78125-6.875-30.945312-21.261719-37.730468-16.3125-7.691407-36.332031-2.304688-46.5625 12.53125-4.316407 6.261718-6.617188 13.550781-6.648438 21.078124-.019531 4.15625-2.148437 7.929688-5.695312 10.09375-6.425781 3.921876-11.476563 9.660157-14.601563 16.59375-7.410156 16.429688-1.664062 36.347657 13.359375 46.328126 13.246094 8.796874 30.644531 8.269531 43.289063-1.320313 3.296875-2.503906 7.621094-2.882813 11.015625-.96875l27.183593 15.332031c-2.277343 9.570313-3.484374 19.488282-3.484374 29.648438 0 66.558594 50.917968 104.523437 50.917968 104.523437l-50.011718 28.207031c-8.605469 4.851563-13.480469 14.496094-12.417969 24.5625 1 9.441407-4.121094 18.519532-12.742188 22.585938-9.75 4.597656-21.703125 1.382812-27.8125-7.480469-2.597656-3.765625-3.976562-8.132812-3.996093-12.625-.042969-9.402343-4.859376-17.941406-12.882813-22.835937-3.835937-2.34375-6.859375-5.78125-8.742187-9.953125-4.421876-9.8125-.988282-21.703125 7.988281-27.667969 7.9375-5.273438 18.355469-4.960938 25.921875.777344 8.066406 6.117187 18.839844 6.933594 27.445312 2.078125l19.640625-11.074219c3.605469-2.035156 4.882813-6.609375 2.847657-10.21875-2.035157-3.605469-6.613282-4.882812-10.21875-2.847656l-19.636719 11.078125c-3.394531 1.910156-7.714844 1.53125-11.015625-.96875-12.644532-9.589844-30.039063-10.121094-43.289063-1.320313-15.023437 9.980469-20.765625 29.898438-13.359375 46.328125 3.128906 6.933594 8.175782 12.671875 14.601563 16.59375 3.550781 2.164063 5.675781 5.9375 5.695312 10.09375.035157 7.527344 2.332031 14.816407 6.648438 21.078125 7.089843 10.28125 23.449219 22.917969 46.5625 12.53125 14.507812-6.523437 22.929687-21.949218 21.265625-37.730468-.4375-4.113282 1.472656-8.011719 4.867187-9.921876l51.292969-28.929687c1.984375 4.566406 3.050781 9.507813 3.050781 14.5625v16.882813c0 15.082031 12.273438 27.351562 27.351563 27.351562 14.828125 0 27.351562-12.523438 27.351562-27.351562 0-2.816407 1.871094-9.28125 9.59375-8.335938 2.167969.265625 7.144532 1.914062 7.144532 7.960938v12.105468c0 15.078125 12.269531 27.347656 27.351562 27.347656s27.351562-12.269531 27.351562-27.347656v-12.105468c0-5.863282 6.007813-7.667969 7.398438-8.007813 6.65625-1.269531 9.339844 5.042969 9.339844 7.863281 0 7.46875 3.078125 14.773438 8.445312 20.039063 5.277344 5.183593 12.207032 7.972656 19.425782 7.824219 14.792968-.277344 26.832031-12.542969 26.832031-27.34375v-16.882813c0-5.054687 1.066406-9.996094 3.054687-14.5625l51.292969 28.925781c3.390625 1.914063 5.300781 5.808594 4.867187 9.925782-1.667968 15.78125 6.660157 31.421874 21.261719 37.726562 20.445313 8.828125 39.476563-2.25 46.5625-12.527344 4.316407-6.261718 6.617188-13.550781 6.652344-21.078125.015625-4.15625 2.144531-7.929687 5.695313-10.097656 6.421874-3.917969 11.472656-9.65625 14.597656-16.589844 7.410156-16.429687 1.664062-36.34375-13.359375-46.324219zm-102.191407-162.292968 23.28125-13.128906c8.609376-4.855469 13.480469-14.496094 12.417969-24.566407-.996093-9.441406 4.121094-18.519531 12.742188-22.585937 9.746093-4.59375 21.703125-1.378906 27.8125 7.480468 2.597656 3.765626 3.976562 8.132813 4 12.625.039062 9.402344 4.851562 17.9375 12.882812 22.839844 3.835938 2.339844 6.859375 5.78125 8.738281 9.953125 4.421876 9.808594.988282 21.703125-7.984374 27.664063-7.941407 5.273437-18.359376 4.964844-25.925782-.773438-8.066406-6.121094-18.839844-6.941406-27.445312-2.082031l-24.21875 13.65625c-2.613282-7.113281-5.863282-14.070313-9.769532-20.839844-2.011718-3.492187-4.195312-6.90625-6.53125-10.242187zm-314.972656 17.421875c-8.605468-4.855469-19.382812-4.035157-27.449218 2.082031-7.566407 5.738281-17.984376 6.050781-25.921876.777344-8.976562-5.960938-12.410156-17.855469-7.984374-27.664063 1.878906-4.171875 4.902343-7.613281 8.738281-9.957031 8.027343-4.898438 12.84375-13.433594 12.882812-22.835938.019531-4.492187 1.402344-8.859374 4-12.625 6.109375-8.859374 18.0625-12.078124 27.808594-7.480468 8.621094 4.066406 13.742187 13.140625 12.746094 22.585937-1.066407 10.066407 3.808593 19.710938 12.414062 24.5625l23.347657 13.167969c-6.765626 9.65625-12.273438 20.070312-16.320313 31.070312zm416.847656 185.03125c-1.882812 4.171875-4.902343 7.613281-8.738281 9.953125-8.027343 4.894531-12.84375 13.433594-12.882812 22.835937-.019531 4.496094-1.402344 8.859375-4 12.628907-6.109375 8.859374-18.066407 12.074218-27.8125 7.476562-8.621094-4.0625-13.742188-13.140625-12.742188-22.585938 1.0625-10.066406-3.808593-19.710937-12.417969-24.5625l-50.011718-28.207031c.480468-.453125 16.730468-14.6875 24.8125-26.28125l42.4375 23.933594c8.605468 4.855469 19.378906 4.035156 27.445312-2.082031 7.566406-5.734375 17.988282-6.046875 25.925782-.773438 8.976562 5.960938 12.40625 17.851563 7.984374 27.664063zm0 0"/></svg>
);

const Character = ({ id, name, prediction }) => (
  <li>
    <div className="character-avatar-container">
      {avatars[id] ? <img className="character-avatar" alt={name} src={avatars[id]} /> : <div className="avatar-placeholder"></div>}
    </div>
    <div className="character-info">
      <span className="character-name">{name}</span>
      <span className="prediction">
        {prediction === "0" && <span className="survive"><CheckMark /> Survives</span>}
        {prediction === "7" && <span className="die"><Skull /> Dies (at some point)</span>}
        {prediction !== "0" && prediction !== "7" ? <span className="die"><Skull /> Dies in Episode {prediction}</span> : null}
      </span>
    </div>
  </li>
);

const Bet = ({ description, prediction, id }) => (
  <li className="flex-direction-column">
    {description}
    <span className="prediction bet-prediction">
      {prediction === "0" && <span className="will-not-occur">Will not occur</span>}
      {prediction !== "0" && <span className="will-occur"><CheckMark /> Episode {prediction}</span>}
    </span>
  </li>
);

export const Confirm = ({ characters, characterDeathChoices, betChoices, bets }) => {

  const characterRows = characters.map(character => {
    const predictionEpisode = characterDeathChoices[character.id];
    return <Character key={character.id} {...character} prediction={predictionEpisode} />
  });

  const betRows = bets.map(bet => {
    const predictionEpisode = betChoices[bet.id];
    return <Bet key={bet.id} {...bet} prediction={predictionEpisode} />
  });

  return (
    <div className="form-confirm container">
      <h2>Confirm</h2>
      <p>Take one last look and lock in your choices.</p>
      <ul>
        {characterRows}
      </ul>
      <h2>Bonus predictions</h2>
      <ul>
        {betRows}
      </ul>
    </div>
  );
};
